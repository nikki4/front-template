@mixin transition(){
	transition: all .2s ease-out;
}
@mixin font($font-size){
	font-size: ($font-size * 1px / $fs * 1rem);
}
@mixin font($font-size, $line-height){
	font-size: ($font-size * 1px / $fs * 1rem);
	line-height: ($line-height * 1px / $fs * 1rem);
}
@mixin font-face($fontFamily, $path, $fileName, $svgLabel, $fontWeight: normal, $fontStyle: normal) {

	@font-face {
		font-family: $fontFamily;

		src: url('#{$path + $fileName}.eot');
		src: url('#{$path + $fileName}.eot?#iefix') format('embedded-opentype'),
		url('#{$path + $fileName}.woff') format('woff'),
		url('#{$path + $fileName}.woff2') format('woff2'),
		url('#{$path + $fileName}.ttf') format('truetype'),
		url('#{$path + $fileName}.svg##{$svgLabel}') format('svg');

		font-weight: $fontWeight;
		font-style: $fontStyle;
	}
}
@mixin icon-svg($icon-name) {
	$icon-path: "../images/svg/";
	background: data-uri("#{$icon-path + $icon-name}") 0 0 no-repeat;
	width: image-width("#{$icon-path + $icon-name}");
	height: image-height("#{$icon-path + $icon-name}");
	display: inline-block;
}
@mixin clearfix() {
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}
@mixin size($width, $height){
	width: $width;
	height: $height;
}
@mixin size($width){
	width: $width;
	height: $width;
}
// @mixin calc($param, $val){
// 	${param}: calc(#{"${val}"});
// 	${param}: -moz-calc(#{"${val}"});
// 	${param}: -webkit-calc(#{"${val}"});
// 	${param}: -o-calc(#{"${val}"});
// }